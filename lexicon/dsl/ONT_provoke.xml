<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::provoke">
 <relation label="inherit">
  ont::cause-effect
 </relation>
 <relation label="overlap">
  wn::|persuade%2:32:00::|
  wn::|force%2:36:00::|
  wn::|coerce%2:41:00::|
  wn::|subject%2:39:03::|
  wn::|oblige%2:41:00::|
  wn::|arouse%2:37:00::|
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="phys-obj" />
     <concept name="abstr-obj" />
    </or>
    <feat name="intentional">+</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::cause-effect">
 <comment>
  &quot;an AGENT causes some event to occur or proposition to become true. Usually the verbs that fall under this category are very general causal verbs that take other events as their arguments and are positive causes- i.e., events are caused to happen as opposed to negative causes as in an event is prevented.&quot;
 </comment>
 <relation label="inherit">
  ont::acting
 </relation>
 <relation label="overlap">
  wn::|do%2:36:02::|
  wn::|drive%2:35:00::|
  wn::|make%2:36:08::|
  wn::|open_up%2:30:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="cause">
  <or>
   force
   agentive
  </or>
  </feat>
  <feat name="type">ont::cause-effect</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
    </or>
    <feat name="type">
    <or>
     ont::situation-root
     ont::property-val
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
   <feat name="intentional">+</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::acting">
 <comment>
  &quot;abstract event of doing something: behave, activity, ...&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="cause">
 <or>
  force
  agentive
 </or>
 </feat>
 <feat name="type">ont::cause-effect</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
   <feat name="type">
   <or>
    ont::situation-root
    ont::property-val
   </or>
   </feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="situation" />
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="arouse" />
 </morph>
 <example text="the proposal aroused anger">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coax" />
 </morph>
 <example text="He coaxed him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coax" />
 </morph>
 <example text="he coaxed a promise [from them]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coerce" />
 </morph>
 <example text="He coerce him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coerce" />
 </morph>
 <example text="he coerced a reaction [from the crowd]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="compel" />
 </morph>
 <example text="He compelled him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="compel" />
 </morph>
 <example text="His manner compelled respect [from the audience]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="dare" />
 </morph>
 <example text="he dared to release the storm report">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-formal-subjcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="dare" />
 </morph>
 <example text="he dared him to release the storm report">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="embolden" />
  <forms>
   -VB
   <past>
    <word first-word="emboldened" />
   </past>
   <ing>
    <word first-word="emboldening" />
   </ing>
  </forms>
 </morph>
 <example text="the speech emboldened the masses">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="entice" />
 </morph>
 <example text="he enticed him [to release the storm report]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="force" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="He forced him [to run for office]">
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="galvanize" />
 </morph>
 <example text="the attraction of Napoleon was enough to galvanize him [to become the Emporer's painter]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="galvanize" />
 </morph>
 <example text="the news galvanized him into action">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-xp-pp-from-templ" xp="'(w::pp
                                                                              (or
                                                                                w::into
                                                                                w::to))" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="(or
                                                                      w::into
                                                                      w::to)" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="impel" />
 </morph>
 <example text="He impelled him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="incite" />
 </morph>
 <example text="He incited him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="incite" />
 </morph>
 <example text="His manner incited anger [in them]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="inflame" />
  <forms>
   -VB
   <nom>
    <word first-word="inflammation" />
   </nom>
  </forms>
 </morph>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="inspire" />
 </morph>
 <example text="Napoleon inspired him [to become the Emporer's painter]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="inspire" />
 </morph>
 <example text="he inspired confidence [in them]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="inveigle" />
 </morph>
 <example text="He inveigled him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="inveigle" />
 </morph>
 <example text="He inveigled more money [from them]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="jolt" />
 </morph>
 <example text="the news jolted him [into action]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-xp-optional-b-templ" xp="'(w::pp
                                                                                 (or
                                                                                   w::into
                                                                                   w::to))" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="(or
                                                                      w::into
                                                                      w::to)" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="lull" />
 </morph>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-xp-optional-b-templ" xp="'(w::pp
                                                                                 (or
                                                                                   w::into
                                                                                   w::to))" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="(or
                                                                      w::into
                                                                      w::to)" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mislead" />
  <forms>
   -VB
   <past>
    <word first-word="misled" />
   </past>
   <ing>
    <word first-word="misleading" />
   </ing>
  </forms>
 </morph>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="motivate" />
  <forms>
   -VB
   <nom>
    <word first-word="motivation" />
   </nom>
  </forms>
 </morph>
 <example text="He motivated him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="move" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="the story moved him [to change his ways]">
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="obligate" />
  <forms>
   -VB
   <nom>
    <word first-word="obligation" />
   </nom>
  </forms>
 </morph>
 <example text="He obligated him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="oblige" />
 </morph>
 <example text="He obliged him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="press" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="Napoleon pressed him to become the Emporer's painter">
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-cp-objcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="pressure" />
 </morph>
 <example text="He pressured him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="prod" />
 </morph>
 <example text="He pressured him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="provoke" />
  <forms>
   -VB
   <nom>
    <word first-word="provocation" />
   </nom>
  </forms>
 </morph>
 <example text="He provoked him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="provoke" />
  <forms>
   -VB
   <nom>
    <word first-word="provocation" />
   </nom>
  </forms>
 </morph>
 <example text="he provoked a response [in the audience]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="push" />
 </morph>
 <example text="he pushed him to do it">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-cp-objcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="rouse" />
 </morph>
 <example text="He roused him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="rouse" />
 </morph>
 <example text="the lecture roused anger [in the crowd]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="spur" />
 </morph>
 <example text="He spurred him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="spur" />
 </morph>
 <example text="the lecture spurred anger [in the crowd]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="tantalize" />
 </morph>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-xp-optional-b-templ" xp="'(w::pp
                                                                                 w::into)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::into" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="taunt" />
 </morph>
 <example text="He taunted him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::amuse-31.1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="tempt" />
 </morph>
 <example text="He tempted him [to run for office]">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <relation label="overlap">
  vn::59-force
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-formal-objcontrol-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="tempt" />
 </morph>
 <example text="he tempted fate">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::provoke
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
</dsl>
