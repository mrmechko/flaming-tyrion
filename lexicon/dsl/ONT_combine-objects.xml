<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::combine-objects">
 <comment>
  &quot;symmetric combination of objects, abstract or physical: e.g., X combines with y = y combines with x = x and y combine;  the result is a new combination where the original objects cannot be separated&quot;
 </comment>
 <relation label="inherit">
  ont::putting-together
 </relation>
 <relation label="overlap">
  wn::|amalgamate%2:35:00::|
  wn::|blend%2:30:00::|
  wn::|coalesce%2:30:00::|
  wn::|cohere%2:42:01::|
  wn::|combine%2:30:00::|
  wn::|commingle%2:30:00::|
  wn::|commix%2:35:00::|
  wn::|conflate%2:30:00::|
  wn::|flux%2:30:00::|
  wn::|fuse%2:30:00::|
  wn::|immix%2:30:00::|
  wn::|meld%2:30:00::|
  wn::|merge%2:30:01::|
  wn::|mingle%2:35:00::|
  wn::|mix%2:30:00::|
  wn::|mix%2:30:01::|
  wn::|mix%2:35:00::|
  wn::|mix_in%2:30:01::|
  wn::|unify%2:35:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">+</feat>
  <feat name="cause">agentive</feat>
  <feat name="type">ont::combine-objects</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::affected1" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::event-of-causation">
 <comment>
  &quot;events involving an AGENT acting on an AFFECTED&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected1" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">+</feat>
 <feat name="cause">agentive</feat>
 <feat name="type">ont::combine-objects</feat>
 </sem-feats>
 <concept name="ont::putting-together">
 <relation label="inherit">
  ont::event-of-causation
 </relation>
 </concept>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="situation" />
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="blend" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coalesce" />
 </morph>
 <example text="the groups coalesced">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
  ont::agent-np-plural-templ
 </relation>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coalesce" />
 </morph>
 <example text="freedom coalesced with volition">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-agent1-xp-pp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::agent1"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="coalesce" />
 </morph>
 <example text="religion colaesces social groups">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="combine" />
  <forms>
   -VB
   <nom>
    <word first-word="combination" />
   </nom>
  </forms>
 </morph>
 <example text="I combined the aspirin with my vitamins">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="combine" />
  <forms>
   -VB
   <nom>
    <word first-word="combination" />
   </nom>
  </forms>
 </morph>
 <example text="the combined costs">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="commingle" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="conjoin" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::amalgamate-22.2-2
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="fold" remaining-words="" particle="in" />
 </morph>
 <example text="fold in the remaining ingredients">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="fuse" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="fuse" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="glom" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::shake-22.3-2-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" xp="'(w::pp
                                                                                  w::to)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::to" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="jumble" />
  <forms>
   -VB
   <nom>
    <word first-word="jumble" />
   </nom>
  </forms>
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::shake-22.3-2
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mingle" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mingle" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mix" remaining-words="" particle="up" />
 </morph>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-affected1-xp-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected1" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mix" />
  <forms>
   -VB
   <nom>
    <word first-word="mix" />
   </nom>
  </forms>
 </morph>
 <example text="mix the ingredients">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <relation label="overlap">
  vn::mix-22.1-1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="mix" remaining-words="" particle="in" />
 </morph>
 <example text="mix in the remaining ingredients">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::combine-objects
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
   <feat name="cause">agentive</feat>
  </sem-feats>
 </semantics>
 </sense>
</dsl>
