<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::pos-condition">
 <relation label="inherit">
  ont::condition
 </relation>
 </concept>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 <concept name="proposition" />
 </or>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
  <concept name="proposition" />
 </or>
 </concept>
 <concept name="abstr-obj" />
 <sem-frame>
 <role-restr-map roles="ont::ground">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::figure">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  abstr-obj
 </relation>
 <feat name="intentional">-</feat>
 <feat name="container">-</feat>
 <feat name="orientation">-</feat>
 <feat name="intensity">-</feat>
 <feat name="scale">-</feat>
 <feat name="gradability">+</feat>
 </sem-feats>
 <concept name="ont::abstract-object">
 <comment>
  &quot;abstract objects, mental constructions, with no physical realization&quot;
 </comment>
 <relation label="overlap">
  wn::|psychological_feature%1:03:00::|
  wn::|abstraction%1:03:00::|
  wn::|abstract_entity%1:03:00::|
 </relation>
 <relation label="inherit">
  ont::referential-sem
  abstr-obj
 </relation>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::figure">
  <or>
   <concept name="phys-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  abstr-obj
 </relation>
 <feat name="intensity">hi</feat>
 <feat name="scale">other-scale</feat>
 <feat name="gradability">+</feat>
 </sem-feats>
 <concept name="ont::predicate">
 <comment>
  &quot;predications that require a subcat to form a modifier, typically adverbials (e.g., on, as well as&quot;
 </comment>
 <relation label="inherit">
  ont::abstract-object
 </relation>
 <sem-feats>
  <relation label="inherit">
   abstr-obj
  </relation>
  <feat name="intentional">-</feat>
  <feat name="container">-</feat>
  <feat name="orientation">-</feat>
  <feat name="intensity">-</feat>
  <feat name="scale">-</feat>
  <feat name="gradability">+</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::ground">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::figure">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::ground" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::figure">
  <concept name="situation" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-object-modifier">
 <relation label="inherit">
  ont::predicate
 </relation>
 <sem-feats>
  <relation label="inherit">
   abstr-obj
  </relation>
  <feat name="intensity">hi</feat>
  <feat name="scale">other-scale</feat>
  <feat name="gradability">+</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::figure">
   <or>
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::situation-modifier">
 <relation label="inherit">
  ont::situation-object-modifier
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::ground" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::figure">
   <concept name="situation" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::condition">
 <relation label="inherit">
  ont::situation-modifier
 </relation>
 </concept>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="even" remaining-words="if" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-s-decl-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="even" remaining-words="if" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <example text="be careful even if walking">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-gerund-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="if" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="if I see it then I will believe it">
 </example>
 <relation label="inherit">
  ont::pos-condition
 </relation>
 <syntax>
  <template-call template="ont::binary-constraint-s-decl-middle-word-subcat-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat2" syn-cat="word" head-word="w::then" sem-role="ont::norole"/>
   <syn-sem-map syn-arg="subcat" syn-cat="s" sem-role="ont::ground"/>
   <syn-sem-map syn-arg="argument" syn-cat="s" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="atype">pre</feat>
   <feat name="sort">binary-constraint</feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="if" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-s-decl-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="if" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="be careful if walking">
 </example>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-gerund-templ
 </relation>
 </sense>
 <sense>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <relation label="inherit">
  ont::pos-condition
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="whether" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-s-decl-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="adv" />
  <word first-word="whether" remaining-words="or not" />
 </morph>
 <comment>
  &quot;SENTENTIAL-CONJUNCTION-CLEANUP&quot;
 </comment>
 <relation label="inherit">
  ont::pos-condition
  ont::binary-constraint-s-decl-templ
 </relation>
 </sense>
</dsl>
