<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::outcome">
 <relation label="inherit">
  ont::event-type
 </relation>
 <relation label="overlap">
  wn::|consequence%1:19:00::|
  wn::|result%1:11:00::|
  wn::|side_effect%1:19:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">
  <or>
   agentive
   force
  </or>
  </feat>
  <feat name="type">ont::outcome</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::figure" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="situation" />
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::figure" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">
 <or>
  agentive
  force
 </or>
 </feat>
 <feat name="type">ont::outcome</feat>
 </sem-feats>
 <concept name="ont::event-type">
 <comment>
  &quot;classification of situated events based on social or other criteria, and typically realized by nominals, i.e.,
        they are not nominalization of verbal events&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="intentional">-</feat>
  <feat name="type">ont::event-type</feat>
 </sem-feats>
 </concept>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="intentional">-</feat>
 <feat name="type">ont::event-type</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="consequence" />
 </morph>
 <example text="as a consequence you may not distribute the library">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::other-reln-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="w::of" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">other-reln</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="effect" />
 </morph>
 <relation label="inherit">
  ont::outcome
  ont::bare-pred-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="finding" />
 </morph>
 <comment>
  &quot;CERNL&quot;
 </comment>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::other-reln-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="w::of" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">other-reln</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="outcome" />
 </morph>
 <comment>
  &quot;PROJECTOR-PURCHASING&quot;
 </comment>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::other-reln-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="w::of" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">other-reln</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="product" />
 </morph>
 <comment>
  &quot;PLOWPQS&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <relation label="inherit">
  ont::outcome
  ont::count-pred-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="response" />
 </morph>
 <comment>
  &quot;LAM-INITIAL&quot;
 </comment>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::other-reln-templ" xp="'(w::pp
                                                        (or
                                                          w::on
                                                          w::about
                                                          w::for))" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="(or
                                                                       w::on
                                                                       w::about
                                                                       w::for)" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">other-reln</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="response" />
 </morph>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::count-subcat-that-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::cp" sem-role="ont::formal" optional="optional"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="sort">pred</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="result" />
 </morph>
 <comment>
  &quot;HTML-PURCHASING-CORPUS&quot;
 </comment>
 <example text="here is the list of results">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::outcome
 </relation>
 <syntax>
  <template-call template="ont::other-reln-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="w::of" sem-role="ont::figure"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">other-reln</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="side" remaining-words="effect" />
  <forms>
   -S-3P
   <plur>
    <word first-word="side" remaining-words="effects" />
   </plur>
  </forms>
 </morph>
 <relation label="inherit">
  ont::outcome
  ont::count-pred-templ
 </relation>
 </sense>
</dsl>
