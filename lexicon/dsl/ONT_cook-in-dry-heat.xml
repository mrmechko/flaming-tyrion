<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::cook-in-dry-heat">
 <relation label="inherit">
  ont::cook
 </relation>
 </concept>
 <concept name="situation" />
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::affected1" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::transformation</feat>
 </sem-feats>
 <concept name="ont::change">
 <comment>
  &quot;an event involving some change in an object&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-causation
 </relation>
 <relation label="overlap">
  wn::|change%1:07:00::|
  wn::|change%1:06:01::|
  wn::|change%2:30:00::|
  wn::|change%1:04:00::|
  wn::|change%1:19:00::|
  wn::|change%2:30:02::|
  wn::|change%2:30:08::|
  wn::|change%2:30:01::|
  wn::|transition%2:30:00::|
  wn::|modify%2:30:01::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <or>
    <concept name="abstr-obj" />
    <concept name="situation" />
    <concept name="time" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::result" optional="optional">
   <sem-feats>
    <relation label="inherit">
     abstr-obj
    </relation>
    <feat name="type">
    <or>
     ont::resulting-state
     ont::domain-property
     ont::resulting-object
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <relation label="inherit">
    phys-obj
   </relation>
   <feat name="object-function">comestible</feat>
   <feat name="type">ont::food</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent">
  <sem-feats>
   <relation label="inherit">
    phys-obj
   </relation>
   <feat name="origin">human</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="cause">agentive</feat>
 <feat name="type">ont::cooking</feat>
 </sem-feats>
 <concept name="ont::transformation">
 <relation label="inherit">
  ont::change
 </relation>
 <relation label="overlap">
  wn::|convert%2:30:03::|
  wn::|metabolize%2:34:00::|
  wn::|transform%2:30:00::|
  wn::|transform%2:30:03::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::transformation</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::affected1" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::cooking">
 <relation label="inherit">
  ont::transformation
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="cause">agentive</feat>
  <feat name="type">ont::cooking</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <relation label="inherit">
     phys-obj
    </relation>
    <feat name="object-function">comestible</feat>
    <feat name="type">ont::food</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent">
   <sem-feats>
    <relation label="inherit">
     phys-obj
    </relation>
    <feat name="origin">human</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::cook">
 <comment>
  &quot;to cook i.e., alter chemical property of food (typically via heat)&quot;
 </comment>
 <relation label="inherit">
  ont::cooking
 </relation>
 <relation label="overlap">
  wn::|cook%2:30:00::|
 </relation>
 </concept>
 <concept name="ont::event-of-causation">
 <comment>
  &quot;events involving an AGENT acting on an AFFECTED&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::change</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <or>
   <concept name="abstr-obj" />
   <concept name="situation" />
   <concept name="time" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::result" optional="optional">
  <sem-feats>
   <relation label="inherit">
    abstr-obj
   </relation>
   <feat name="type">
   <or>
    ont::resulting-state
    ont::domain-property
    ont::resulting-object
   </or>
   </feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::bake">
 <comment>
  &quot;cook without direct exposure to heat (typically in an oven)&quot;
 </comment>
 <relation label="inherit">
  ont::cook-in-dry-heat
 </relation>
 <relation label="overlap">
  wn::|bake%2:30:00::|
  wn::|scallop%2:36:01::|
 </relation>
 </concept>
 <concept name="ont::roast">
 <comment>
  &quot;cook (especially meat) by prolonged exposure to heat (typically over open flames or in oven)&quot;
 </comment>
 <relation label="inherit">
  ont::cook-in-dry-heat
 </relation>
 <relation label="overlap">
  wn::|grill%2:30:00::|
  wn::|roast%2:30:00::|
 </relation>
 </concept>
</dsl>
