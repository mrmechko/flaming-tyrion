<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::depart">
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <relation label="overlap">
  wn::|depart%2:38:01::|
  wn::|part%2:38:00::|
  wn::|start%2:38:02::|
  wn::|start_out%2:38:00::|
  wn::|set_forth%2:38:00::|
  wn::|set_off%2:38:00::|
  wn::|set_out%2:38:00::|
  wn::|take_off%2:38:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="time-span">atomic</feat>
  <feat name="cause">force</feat>
  <feat name="aspect">bounded</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::source" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 <concept name="proposition" />
 </or>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="container">-</feat>
 <feat name="information">mental-construct</feat>
 <feat name="intentional">-</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
  <concept name="proposition" />
 </or>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::beneficiary" optional="optional">
  <concept name="phys-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::result" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="container">-</feat>
  <feat name="information">mental-construct</feat>
  <feat name="intentional">-</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should ahve an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::beneficiary" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::result" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="situation" />
 <sem-frame>
 <role-restr-map roles="ont::source" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="time-span">atomic</feat>
 <feat name="cause">force</feat>
 <feat name="aspect">bounded</feat>
 </sem-feats>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="depart" />
  <forms>
   -VB
   <nom>
    <word first-word="departure" />
   </nom>
  </forms>
 </morph>
 <example text="depart from Rochester for NYC">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::go-from-to-templ" xp1="'(w::pp w::from)" xp2="'(w::pp
                                                                                w::for)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="pp" head-word="w::for" sem-role="ont::result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="pp" head-word="w::from" sem-role="ont::source" optional="optional"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="depart" />
  <forms>
   -VB
   <nom>
    <word first-word="departure" />
   </nom>
  </forms>
 </morph>
 <comment>
  &quot;RALF.TXT&quot;
 </comment>
 <example text="the truck departed atlanta for rochester">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::go-from-to-templ" xp2="'(w::pp w::for)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="pp" head-word="w::for" sem-role="ont::result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::source" optional="optional"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="escape" />
 </morph>
 <comment>
  &quot;CALOY2&quot;
 </comment>
 <example text="he escaped from the party">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::agent-source-templ" xp="'(w::pp w::from)" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="pp" head-word="w::from" sem-role="ont::source"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="exit" />
  <forms>
   -VB
   <past>
    <word first-word="exited" />
   </past>
   <ing>
    <word first-word="exiting" />
   </ing>
  </forms>
 </morph>
 <example text="exit the room">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::agent-neutral-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::neutral" optional="optional"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="leave" />
  <forms>
   -VB
   <past>
    <word first-word="left" />
   </past>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::go-from-to-templ" xp1="'(w::pp w::from)" xp2="'(w::pp
                                                                                w::for)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="pp" head-word="w::for" sem-role="ont::result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="pp" head-word="w::from" sem-role="ont::source" optional="optional"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="leave" />
  <forms>
   -VB
   <past>
    <word first-word="left" />
   </past>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he left the house">
 </example>
 <relation label="inherit">
  ont::depart
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="leave" />
  <forms>
   -VB
   <past>
    <word first-word="left" />
   </past>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he left">
 </example>
 <relation label="inherit">
  ont::depart
  ont::agent-templ
 </relation>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="scram" />
 </morph>
 <relation label="inherit">
  ont::depart
  ont::agent-templ
 </relation>
 <relation label="overlap">
  vn::run-51.3.2
 </relation>
 </sense>
</dsl>
