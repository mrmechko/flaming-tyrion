<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::possibly-true">
 <relation label="inherit">
  ont::event-of-state
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::formal">
   <concept name="situation" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::formal" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::neutral" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">static</feat>
 <feat name="type">ont::event-of-state</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::formal">
  <concept name="situation" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-state">
 <comment>
  &quot;Events describing a state of affairs holding&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">static</feat>
  <feat name="type">ont::event-of-state</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::formal" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="situation" />
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="appear" />
  <forms>
   -VB
   <nom>
    <word first-word="appearance" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="there appears to be a truck on the corner">
 </example>
 <relation label="inherit">
  ont::possibly-true
 </relation>
 <syntax>
  <template-call template="ont::expletive-neutral-1-xp1-2-xp2-templ" xp1="'(w::np
                                                                            w::there)" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::cp" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" head-word="w::there" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="feel" remaining-words="like" />
  <forms>
   -VB
   <past>
    <word first-word="felt" />
   </past>
  </forms>
 </morph>
 <comment>
  &quot;SPEECHTESTS&quot;
 </comment>
 <relation label="inherit">
  ont::possibly-true
 </relation>
 <syntax>
  <template-call template="ont::expletive-neutral-1-xp1-2-xp2-templ" xp1="'(w::np
                                                                            w::it)" xp2="'w::s" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::s" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" head-word="w::it" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="look" remaining-words="like" />
 </morph>
 <relation label="inherit">
  ont::possibly-true
 </relation>
 <syntax>
  <template-call template="ont::expletive-neutral-1-xp1-2-xp2-templ" xp1="'(w::np
                                                                            w::it)" xp2="'w::s" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::s" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" head-word="w::it" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="seem" remaining-words="like" />
 </morph>
 <relation label="inherit">
  ont::possibly-true
 </relation>
 <syntax>
  <template-call template="ont::expletive-neutral-1-xp1-2-xp2-templ" xp1="'(w::np
                                                                            w::it)" xp2="'w::s" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::s" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" head-word="w::it" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
</dsl>
