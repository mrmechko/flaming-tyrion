<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::allow">
 <relation label="inherit">
  ont::cause-effect
 </relation>
 <relation label="overlap">
  wn::|allow%2:41:00::|
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::affected">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="container">-</feat>
 <feat name="information">mental-construct</feat>
 <feat name="intentional">-</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
  <concept name="proposition" />
 </or>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should ahve an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::beneficiary" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::result" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="type">position-reln</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::cause-effect">
 <comment>
  &quot;an AGENT causes some event to occur or proposition to become true. Usually the verbs that fall under this category are very general causal verbs that take other events as their arguments and are positive causes- i.e., events are caused to happen as opposed to negative causes as in an event is prevented.&quot;
 </comment>
 <relation label="inherit">
  ont::acting
 </relation>
 <relation label="overlap">
  wn::|cause%2:32:00::|
  wn::|do%2:36:02::|
  wn::|make%2:36:08::|
  wn::|drive%2:35:00::|
  wn::|get%2:30:02::|
  wn::|get%2:30:00::|
  wn::|open_up%2:30:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="cause">
  <or>
   force
   agentive
  </or>
  </feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
    </or>
    <feat name="type">
    <or>
     situation-root
     property-val
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::acting">
 <comment>
  &quot;abstract event of doing something: behave, activity, ...&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="cause">
 <or>
  force
  agentive
 </or>
 </feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
   <feat name="type">
   <or>
    situation-root
    property-val
   </or>
   </feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="container">-</feat>
  <feat name="information">mental-construct</feat>
  <feat name="intentional">-</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::beneficiary" optional="optional">
  <concept name="phys-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::result" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="type">position-reln</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 <concept name="proposition" />
 </or>
 <concept name="situation" />
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="allow" />
 </morph>
 <example text="allow the team by the lake to go home">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::agent-effect-affected-objcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::norole"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="allow" />
 </morph>
 <example text="Cockroaches are not allowed">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <relation label="overlap">
  vn::allow-64
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="allow" />
 </morph>
 <example text="they allow smoking">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::agent-effect-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="let" />
  <forms>
   -VB
   <past>
    <word first-word="let" />
   </past>
   <ing>
    <word first-word="letting" />
   </ing>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="let them eat cake">
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::agent-effect-affected-objcontrol-templ" xp="'w::vp" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="vp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::norole"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="let" />
  <forms>
   -VB
   <past>
    <word first-word="let" />
   </past>
   <ing>
    <word first-word="letting" />
   </ing>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="let them">
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="permission" />
 </morph>
 <example text="can I have permission to move it">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::subcat-mass-effect-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="cp" sem-role="ont::formal"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">mass</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">pred</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="permission" />
 </morph>
 <comment>
  &quot;CALO-Y1SCRIPT&quot;
 </comment>
 <example text="get permission for the purchase">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::subcat-mass-effect-templ" xp="'(w::pp w::for)" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="pp" head-word="w::for" sem-role="ont::formal"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">mass</feat>
   <feat name="allow-deleted-comp">+</feat>
   <feat name="sort">pred</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
  </syn-feats>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="permit" />
 </morph>
 <example text="Permit him to go">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <relation label="overlap">
  vn::allow-64
 </relation>
 <syntax>
  <template-call template="ont::agent-effect-affected-objcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::norole"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="permit" />
 </morph>
 <example text="the advances permitted greater flexibility">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::allow
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="aspect">dynamic</feat>
  </sem-feats>
 </semantics>
 </sense>
</dsl>
