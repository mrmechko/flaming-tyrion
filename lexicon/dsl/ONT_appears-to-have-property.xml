<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::appears-to-have-property">
 <relation label="inherit">
  ont::have-property
 </relation>
 <relation label="overlap">
  wn::|sound%2:39:06|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="time-span">extended</feat>
  <feat name="aspect">stage-level</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <concept name="situation" />
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <sem-feats>
    <relation label="inherit">
     phys-obj
    </relation>
    <feat name="origin">living</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 <concept name="proposition" />
 </or>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="container">-</feat>
 <feat name="information">mental-construct</feat>
 <feat name="intentional">-</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00|
 </relation>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
  <concept name="proposition" />
 </or>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::formal">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::neutral">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">static</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="container">-</feat>
  <feat name="information">mental-construct</feat>
  <feat name="intentional">-</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::neutral">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="time-span">extended</feat>
 <feat name="aspect">static</feat>
 </sem-feats>
 <concept name="ont::event-of-state">
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">static</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::formal">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::neutral">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="situation" />
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <concept name="situation" />
 </role-restr-map>
 <role-restr-map roles="ont::neutral" optional="optional">
  <sem-feats>
   <relation label="inherit">
    phys-obj
   </relation>
   <feat name="origin">living</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="time-span">extended</feat>
 <feat name="aspect">stage-level</feat>
 </sem-feats>
 <concept name="ont::have-property">
 <relation label="inherit">
  ont::event-of-state
 </relation>
 <relation label="overlap">
  wn::|be%2:42:03|
  wn::|be%2:42:05|
  wn::|savor%2:39:02|
  wn::|sound%2:39:03|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="time-span">extended</feat>
  <feat name="aspect">static</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::neutral">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="appearance" />
  <forms>
   -VB
   <nom>
    <word first-word="appearance" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he appears happy">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
  ont::neutral-theme-complex-subjcontrol-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="appearance" />
  <forms>
   -VB
   <nom>
    <word first-word="appearance" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="It appears that he is happy">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::expletive-theme-templ" xp1="'(w::np w::it)" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="cp" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" head-word="w::it" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="appearance" />
  <forms>
   -VB
   <nom>
    <word first-word="appearance" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he appears to be happy">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::neutral-theme-subjcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::neutral"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="feel" />
  <forms>
   -VB
   <past>
    <word first-word="felt" />
   </past>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="it feels good">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::expletive-theme-templ" xp1="'(w::np w::it)" xp2="'w::s" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="s" sem-role="ont::neutral"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" head-word="w::it" sem-role="ont::norole"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="look" />
  <forms>
   -VB
   <nom>
    <word first-word="look" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he looks happy (to me)">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
  ont::neutral-theme-complex-subjcontrol-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="seem" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he seems happy">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::neutral-pred-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::neutral"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="seem" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he seems to be happy/the situation seems to be out of control">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::neutral-theme-subjcontrol-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="cp" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::neutral"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">stage-level</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="smell" />
 </morph>
 <example text="it smells like trouble">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
  ont::neutral-theme-complex-subjcontrol-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="sound" />
  <forms>
   -VB
   <nom>
    <word first-word="sound" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="the wind sounds fierce">
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
  ont::neutral-theme-complex-subjcontrol-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="taste" />
  <forms>
   -VB
   <nom>
    <word first-word="taste" />
   </nom>
  </forms>
 </morph>
 <example text="it tastes good">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::appears-to-have-property
 </relation>
 <syntax>
  <template-call template="ont::neutral-pred-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="np" sem-role="ont::neutral"/>
  </syn-sem>
 </syntax>
 </sense>
</dsl>
