<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::cause-produce-reproduce">
 <comment>
  &quot;an AGENT causes a new object to be created&quot;
 </comment>
 <relation label="inherit">
  ont::cause-effect
 </relation>
 <relation label="overlap">
  wn::|output%1:23:00::|
  wn::|produce%2:36:03::|
  wn::|yield%2:40:00::|
  wn::|yield%2:40:02::|
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::affected-result" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="situation" />
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::agent">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
   <feat name="type">
   <or>
    ont::situation-root
    ont::property-val
   </or>
   </feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="cause">agentive</feat>
 <feat name="type">ont::cause-effect</feat>
 </sem-feats>
 <concept name="ont::acting">
 <comment>
  &quot;abstract event of doing something: behave, activity, ...&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::agent">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::cause-effect">
 <comment>
  &quot;an AGENT causes some event to occur or proposition to become true. Usually the verbs that fall under this category are very general causal verbs that take other events as their arguments and are positive causes- i.e., events are caused to happen as opposed to negative causes as in an event is prevented.&quot;
 </comment>
 <relation label="inherit">
  ont::acting
 </relation>
 <relation label="overlap">
  wn::|do%2:36:02::|
  wn::|drive%2:35:00::|
  wn::|make%2:36:08::|
  wn::|open_up%2:30:00::|
  wn::|make%2:30:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="cause">agentive</feat>
  <feat name="type">ont::cause-effect</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
    </or>
    <feat name="type">
    <or>
     ont::situation-root
     ont::property-val
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected-result" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="bring" />
  <forms>
   -VB
   <past>
    <word first-word="brought" />
   </past>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="his consultations brought about his expertise">
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affectedr-xp-templ" xp="'(w::pp w::about)" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::pp" head-word="w::about" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">extended</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="bring" remaining-words="on" />
  <forms>
   -VB
   <past>
    <word first-word="brought" />
   </past>
  </forms>
 </morph>
 <example text="bring on the movie">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="give" remaining-words="rise" />
  <forms>
   -VB
   <past>
    <word first-word="gave" />
   </past>
  </forms>
 </morph>
 <example text="The spark gave rise to a fire">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affectedr-xp-templ" xp="'(w::pp w::to)" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::pp" head-word="w::to" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="induce" />
  <forms>
   -VB
   <nom>
    <word first-word="induction" />
   </nom>
   <agentnom>
    <word first-word="inducer" />
   </agentnom>
  </forms>
 </morph>
 <example text="the chemical induces phosphorylization">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="produce" />
  <forms>
   -VB
   <nom>
    <word first-word="production" />
   </nom>
  </forms>
 </morph>
 <comment>
  &quot;PORTABILITY-EXPERIMENT&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="produce the effect">
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affectedr-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="reproduce" />
  <forms>
   -VB
   <nom>
    <word first-word="reproduction" />
   </nom>
  </forms>
 </morph>
 <comment>
  &quot;PORTABILITY-EXPERIMENT&quot;
 </comment>
 <example text="reproduce the effect">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affectedr-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="result" />
 </morph>
 <example text="The stimulation results in the activation">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-pp-templ" xp="'(w::pp w::in)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::in" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="result" />
 </morph>
 <example text="Side effects may result.">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
  ont::affected-templ
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="result" />
 </morph>
 <example text="The stimulation results from the activation">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::affected-agent-xp-pp-templ" xp="'(w::pp w::from)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::from" sem-role="ont::agent"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="yield" />
  <forms>
   -VB
   <nom>
    <word first-word="yield" />
   </nom>
  </forms>
 </morph>
 <example text="How much will the account yield?">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::cause-produce-reproduce
 </relation>
 <syntax>
  <template-call template="ont::agent-affectedr-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
</dsl>
