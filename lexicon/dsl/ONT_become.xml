<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::become">
 <relation label="inherit">
  ont::event-of-undergoing-action
 </relation>
 <relation label="overlap">
  wn::|take%2:30:09::|
  wn::|come%2:30:03::|
  wn::|become%2:42:00::|
  wn::|become%2:30:00::|
  wn::|go%2:30:04::|
  wn::|get%2:30:00::|
  wn::|open_up%2:30:01::|
  wn::|turn%2:30:04::|
  wn::|become%2:42:01::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::become</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::formal" optional="optional">
   <sem-feats>
    <relation label="inherit">
     abstr-obj
    </relation>
    <feat name="type">ont::relation</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected1" optional="optional">
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="situation" />
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="type">ont::event-of-undergoing-action</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::event-of-undergoing-action">
 <comment>
  &quot;A small class of events that take an affected but do not allow an AGENT construction (though might be caused as in he died from the plague&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="type">ont::event-of-undergoing-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::become</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::formal" optional="optional">
  <sem-feats>
   <relation label="inherit">
    abstr-obj
   </relation>
   <feat name="type">ont::relation</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected1" optional="optional">
  <or>
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::root" />
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="become" />
  <forms>
   -VB
   <ing>
    <word first-word="becoming" />
   </ing>
   <past>
    <word first-word="became" />
   </past>
   <pastpart>
    <word first-word="become" />
   </pastpart>
  </forms>
 </morph>
 <comment>
  &quot;S15&quot;
 </comment>
 <example text="the weather became dangerous">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="become" />
  <forms>
   -VB
   <ing>
    <word first-word="becoming" />
   </ing>
   <past>
    <word first-word="became" />
   </past>
   <pastpart>
    <word first-word="become" />
   </pastpart>
  </forms>
 </morph>
 <example text="the snow became rain">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-affected1-xp-np-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected1"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="break" />
  <forms>
   -VB
   <past>
    <word first-word="broke" />
   </past>
   <pastpart>
    <word first-word="broken" />
   </pastpart>
   <ing>
    <word first-word="breaking" />
   </ing>
   <nom>
    <word first-word="break" />
   </nom>
  </forms>
 </morph>
 <example text="the company broke even">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="come" />
  <forms>
   -VB
   <past>
    <word first-word="came" />
   </past>
   <pastpart>
    <word first-word="come" />
   </pastpart>
  </forms>
 </morph>
 <comment>
  &quot;S15&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="Her wish came true">
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="fall" />
  <forms>
   -VB
   <past>
    <word first-word="fell" />
   </past>
   <pastpart>
    <word first-word="fallen" />
   </pastpart>
   <nom>
    <word first-word="fall" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he fell asleep">
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="get" />
  <forms>
   -VB
   <ing>
    <word first-word="getting" />
   </ing>
   <past>
    <word first-word="got" />
   </past>
   <pastpart>
    <word first-word="gotten" />
   </pastpart>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he gets nauseous">
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="go" />
  <forms>
   -VB
   <third-singular>
    <word first-word="goes" />
   </third-singular>
   <past>
    <word first-word="went" />
   </past>
   <pastpart>
    <word first-word="gone" />
   </pastpart>
  </forms>
 </morph>
 <comment>
  &quot;S15&quot;
 </comment>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="The meat has gone bad">
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="grow" />
  <forms>
   -VB
   <ing>
    <word first-word="growing" />
   </ing>
   <past>
    <word first-word="grew" />
   </past>
   <pastpart>
    <word first-word="grown" />
   </pastpart>
   <nom>
    <word first-word="growth" />
   </nom>
  </forms>
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="he grew restless">
 </example>
 <relation label="inherit">
  ont::become
 </relation>
 <syntax>
  <template-call template="ont::affected-formal-xp-pred-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pred" sem-role="ont::formal"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
  </syn-sem>
 </syntax>
 </sense>
</dsl>
