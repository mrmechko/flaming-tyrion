<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::supply">
 <relation label="inherit">
  ont::giving
 </relation>
 <relation label="overlap">
  wn::|supply%2:40:00::|
  wn::|provide%2:40:00::|
  wn::|render%2:40:02::|
  wn::|furnish%2:40:00::|
 </relation>
 <sem-frame>
  <role-restr-map roles="ont::affected" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="information">mental-construct</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="cause">force</feat>
 <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <concept name="ont::event-of-change">
 <comment>
  &quot;Events that involve change or force: should have an AGENT or AFFECTED role&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">dynamic</feat>
  <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="abstr-obj" />
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="situation" />
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::affected">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent ont::donor">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="type">ont::relinquish</feat>
 </sem-feats>
 <concept name="ont::event-of-causation">
 <comment>
  &quot;events involving an AGENT acting on an AFFECTED&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-action
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <sem-feats>
    <or>
     <concept name="abstr-obj" />
     <concept name="phys-obj" />
     <concept name="situation" />
    </or>
    <feat name="tangible">+</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::affected-result">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::affected">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="iobj">recipient</feat>
 <feat name="cause">agentive</feat>
 <feat name="type">ont::giving</feat>
 </sem-feats>
 <concept name="ont::relinquish">
 <comment>
  &quot;An AGENT does something that results in loss of possession or control of the AFFECTED&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-causation
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="type">ont::relinquish</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::affected">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
    <concept name="situation" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent ont::donor">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::affected" optional="optional">
  <concept name="phys-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::giving">
 <comment>
  &quot;To relinquish control of AFFECTED AFFECTED-RESULT, typically voluntarily and possibly in exchange for something&quot;
 </comment>
 <relation label="inherit">
  ont::relinquish
 </relation>
 <relation label="overlap">
  wn::|give%2:40:00::|
  wn::|give%2:40:03::|
  wn::|giving%1:04:00::|
  wn::|offer%1:10:01::|
  wn::|offering%1:10:01::|
  wn::|send_in%2:41:00::|
  wn::|give%2:40:11::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="iobj">recipient</feat>
  <feat name="cause">agentive</feat>
  <feat name="type">ont::giving</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::result" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::affected-result">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::affected">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::event-of-action">
 <comment>
  &quot;events that involve :agent (whether intentional or not)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-change
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="cause">force</feat>
  <feat name="type">ont::event-of-action</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::agent" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="type">ont::event-of-causation</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::agent" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
    <concept name="situation" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="information">mental-construct</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">dynamic</feat>
 <feat name="type">ont::event-of-change</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::result" optional="optional">
  <concept name="abstr-obj" />
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <sem-feats>
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
    <concept name="phys-obj" />
   </or>
   <feat name="tangible">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
   <concept name="phys-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="situation" />
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="arm" />
 </morph>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="equip" />
 </morph>
 <example text="equip him">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="furnish" />
 </morph>
 <comment>
  &quot;OFFICE&quot;
 </comment>
 <example text="furnish the office">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-xp-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="furnish" />
 </morph>
 <example text="the battery furnishes a spark (to the engine)">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-goal-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::advbl" sem-role="ont::result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="furnish" />
 </morph>
 <example text="the battery furnishes the engine with power">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-recipient-affected-templ" xp="'(w::pp
                                                                      w::with)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="issue" />
 </morph>
 <example text="issue him a visa">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
  ont::agent-affected-recipient-alternation-templ
 </relation>
 <relation label="overlap">
  vn::future_having-13.3
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="provide" />
  <forms>
   -VB
   <nom>
    <word first-word="provision" />
   </nom>
  </forms>
 </morph>
 <example text="provide the food (to him)">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-ar-to-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::to" sem-role="ont::affected-result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="provide" />
  <forms>
   -VB
   <nom>
    <word first-word="provision" />
   </nom>
  </forms>
 </morph>
 <comment>
  &quot;VN2-INTEGRATION&quot;
 </comment>
 <example text="provide him with the food">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-recipient-affected-templ" xp="'(w::pp
                                                                      w::with)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="serve" />
 </morph>
 <provenance name="TRIPS">
  <provenance name="BASE500"/>
 </provenance>
 <example text="that company only serves paying customers">
 </example>
 <relation label="inherit">
  ont::supply
  ont::agent-affected-recipient-alternation-templ
 </relation>
 <relation label="overlap">
  vn::fulfilling-13.4.1-1
 </relation>
 <semantics>
  <sem-feats>
   <feat name="time-span">atomic</feat>
   <feat name="aspect">bounded</feat>
  </sem-feats>
 </semantics>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="supply" />
 </morph>
 <example text="supply him a job">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
  ont::agent-affected-recipient-alternation-templ
 </relation>
 <relation label="overlap">
  vn::fulfilling-13.4.1-1
 </relation>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="supply" />
 </morph>
 <example text="supply him with the goods">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <syntax>
  <template-call template="ont::agent-recipient-affected-templ" xp="'(w::pp
                                                                      w::with)" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::pp" head-word="w::with" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected-result"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
 <sense>
 <morph>
  <pos pos="v" />
  <word first-word="supply" />
 </morph>
 <example text="supply a job to him">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::supply
 </relation>
 <relation label="overlap">
  vn::fulfilling-13.4.1-1
 </relation>
 <syntax>
  <template-call template="ont::agent-affected-goal-optional-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="lcomp" syn-cat="deepsemlex::advbl" sem-role="ont::result" optional="optional"/>
   <syn-sem-map syn-arg="lobj" syn-cat="deepsemlex::np" sem-role="ont::affected"/>
   <syn-sem-map syn-arg="lsubj" syn-cat="deepsemlex::np" sem-role="ont::agent"/>
  </syn-sem>
 </syntax>
 </sense>
</dsl>
