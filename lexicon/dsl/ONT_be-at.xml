<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::be-at">
 <relation label="inherit">
  ont::position
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="locative">located</feat>
  <feat name="container">-</feat>
  <feat name="time-span">extended</feat>
  <feat name="aspect">static</feat>
  <feat name="type">ont::be-at</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::location">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::neutral">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="tangible">+</feat>
 <feat name="container">-</feat>
 <feat name="intentional">-</feat>
 <feat name="type">ont::situation-root</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
  wn::|one%1:09:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <concept name="ont::position">
 <comment>
  &quot;These are stative predicates indicating the position of an object with respect to another. They also typically allow a causal variant where an agent causes this position (see ONT::CAUSE-POSITION)&quot;
 </comment>
 <relation label="inherit">
  ont::event-of-state
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="trajectory">-</feat>
  <feat name="type">ont::position</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::affected1" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::affected" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::agent" optional="optional">
   <sem-feats>
    <relation label="inherit">
     phys-obj
    </relation>
    <feat name="intentional">+</feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::neutral1" optional="optional">
   <or>
    <concept name="phys-obj" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="locative">located</feat>
 <feat name="container">-</feat>
 <feat name="time-span">extended</feat>
 <feat name="aspect">static</feat>
 <feat name="type">ont::be-at</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::location">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::neutral">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::event-of-state">
 <comment>
  &quot;Events describing a state of affairs holding&quot;
 </comment>
 <relation label="inherit">
  ont::situation-root
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">static</feat>
  <feat name="type">ont::event-of-state</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::norole" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::formal" optional="optional">
   <or>
    <concept name="situation" />
    <concept name="abstr-obj" />
   </or>
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="trajectory">-</feat>
 <feat name="type">ont::position</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::affected1" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::affected" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::agent" optional="optional">
  <sem-feats>
   <relation label="inherit">
    phys-obj
   </relation>
   <feat name="intentional">+</feat>
  </sem-feats>
 </role-restr-map>
 <role-restr-map roles="ont::neutral" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::neutral1" optional="optional">
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 </sem-frame>
 <concept name="ont::situation-root">
 <comment>
  &quot;root for all events, whether verbal or nominal&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="tangible">+</feat>
  <feat name="container">-</feat>
  <feat name="intentional">-</feat>
  <feat name="type">ont::situation-root</feat>
 </sem-feats>
 </concept>
 <sem-feats>
 <relation label="inherit">
  situation
 </relation>
 <feat name="aspect">static</feat>
 <feat name="type">ont::event-of-state</feat>
 </sem-feats>
 <sem-frame>
 <role-restr-map roles="ont::norole" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::formal" optional="optional">
  <or>
   <concept name="situation" />
   <concept name="abstr-obj" />
  </or>
 </role-restr-map>
 <role-restr-map roles="ont::neutral" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="situation" />
 <concept name="ont::start-at-loc">
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|begin%2:42:00::|
  wn::|begin%2:42:02::|
 </relation>
 </concept>
 <concept name="ont::end-at-loc">
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|end%2:42:00::|
 </relation>
 </concept>
 <concept name="ont::span">
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|extend%2:42:03::|
  wn::|extend%2:42:01::|
  wn::|jut%2:42:00::|
  wn::|range%2:42:03::|
  wn::|roll%2:42:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">stage-level</feat>
  <feat name="type">ont::span</feat>
 </sem-feats>
 </concept>
 <concept name="ont::should-be-at">
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|belong%2:42:03::|
  wn::|go%2:42:04::|
  wn::|belong%2:42:06::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">stage-level</feat>
  <feat name="type">ont::should-be-at</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::location" optional="optional">
   <sem-feats>
    <relation label="inherit">
     abstr-obj
    </relation>
    <feat name="type">
    <or>
     ont::loc-where-rel
     ont::oriented-loc-reln
     ont::pos-distance
     ont::pos-wrt-speaker-reln
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <sem-feats>
    <relation label="inherit">
     phys-obj
    </relation>
    <feat name="intentional">-</feat>
   </sem-feats>
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::could-be-at">
 <relation label="inherit">
  ont::be-at
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">indiv-level</feat>
  <feat name="type">ont::could-be-at</feat>
 </sem-feats>
 </concept>
 <concept name="ont::be-at-loc">
 <comment>
  &quot;relations that indicate an postural attitude as well as a location&quot;
 </comment>
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|sit%2:35:00::|
  wn::|sit_down%2:35:03::|
  wn::|settle%2:30:00::|
  wn::|hang%2:35:03::|
  wn::|hang%2:35:05::|
  wn::|hang%2:35:06::|
  wn::|hang%2:42:01::|
  wn::|lie%2:35:00::|
  wn::|trail%2:35:05::|
  wn::|lie%2:42:00::|
  wn::|rise%2:42:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">stage-level</feat>
  <feat name="type">ont::be-at-loc</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::neutral" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::location-as-motion">
 <comment>
  &quot;relations that locate in terms of some motion&quot;
 </comment>
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|range%2:42:00::|
  wn::|flow%2:35:04::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">stage-level</feat>
  <feat name="type">ont::location-as-motion</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::neutral" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::location-as-orientation">
 <comment>
  &quot;relations that locate in terms of orientation&quot;
 </comment>
 <relation label="inherit">
  ont::be-at
 </relation>
 <relation label="overlap">
  wn::|slope%2:38:00::|
  wn::|ascend%2:38:10::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   situation
  </relation>
  <feat name="aspect">stage-level</feat>
  <feat name="type">ont::location-as-orientation</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::orientation" optional="optional">
   <sem-feats>
    <relation label="inherit">
     abstr-obj
    </relation>
    <feat name="type">
    <or>
     ont::direction
     ont::goal-reln
    </or>
    </feat>
   </sem-feats>
  </role-restr-map>
  <role-restr-map roles="ont::neutral" optional="optional">
   <concept name="phys-obj" />
  </role-restr-map>
 </sem-frame>
 </concept>
</dsl>
