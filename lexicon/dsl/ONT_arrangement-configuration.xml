<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="ont-type.xsl"?>
<dsl>
 <provenance name="TRIPS"/>
 <concept name="ont::arrangement-configuration">
 <comment>
  &quot;An group of objects organized in some way&quot;
 </comment>
 <relation label="inherit">
  ont::collection
 </relation>
 <relation label="overlap">
  wn::|arrangement%1:14:00::|
  wn::|array%1:14:00::|
  wn::|straggle%1:14:00::|
  wn::|configuration%1:09:00::|
 </relation>
 </concept>
 <or>
 <concept name="phys-obj" />
 <concept name="abstr-obj" />
 <concept name="situation" />
 </or>
 <concept name="ont::root" />
 <sem-feats>
 <relation label="inherit">
  phys-obj
 </relation>
 <feat name="tangible">+</feat>
 <feat name="type">ont::phys-object</feat>
 </sem-feats>
 <concept name="ont::referential-sem">
 <comment>
  &quot;The root type for all things that can be referred to: abstract meaning for THIS and IT&quot;
 </comment>
 <relation label="inherit">
  ont::any-sem
 </relation>
 <relation label="overlap">
  wn::|entity%1:03:00::|
 </relation>
 <sem-feats>
  <or>
   <concept name="phys-obj" />
   <concept name="abstr-obj" />
   <concept name="situation" />
  </or>
  <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 </concept>
 <sem-frame>
 <role-restr-map roles="ont::contents" optional="optional">
  <concept name="t" />
 </role-restr-map>
 <role-restr-map roles="ont::figure" optional="optional">
  <concept name="t" />
 </role-restr-map>
 </sem-frame>
 <sem-feats>
 <relation label="inherit">
  phys-obj
 </relation>
 <feat name="container">+</feat>
 <feat name="type">ont::group-object</feat>
 </sem-feats>
 <concept name="ont::phys-object">
 <comment>
  &quot;All physical objects: things that have substance&quot;
 </comment>
 <relation label="inherit">
  ont::referential-sem
 </relation>
 <relation label="overlap">
  wn::|object%1:03:00::|
  wn::|physical_object%1:03:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   phys-obj
  </relation>
  <feat name="tangible">+</feat>
  <feat name="type">ont::phys-object</feat>
 </sem-feats>
 </concept>
 <concept name="ont::group-object">
 <comment>
  &quot;a collection of objects considered as a unit. So there are many things but grammatically is a singular noun&quot;
 </comment>
 <relation label="inherit">
  ont::phys-object
 </relation>
 <relation label="overlap">
  wn::|grouping%1:03:00::|
 </relation>
 <sem-feats>
  <relation label="inherit">
   phys-obj
  </relation>
  <feat name="container">+</feat>
  <feat name="type">ont::group-object</feat>
 </sem-feats>
 <sem-frame>
  <role-restr-map roles="ont::contents" optional="optional">
   <concept name="t" />
  </role-restr-map>
  <role-restr-map roles="ont::figure" optional="optional">
   <concept name="t" />
  </role-restr-map>
 </sem-frame>
 </concept>
 <concept name="ont::collection">
 <comment>
  &quot;This type contains concepts that explicitly denotethe group (rather than the members of the grop), e.g., group, herd, collection,...&quot;
 </comment>
 <relation label="inherit">
  ont::group-object
 </relation>
 <relation label="overlap">
  wn::|collection%1:14:00::|
  wn::|array%1:10:00::|
  wn::|series%1:14:01::|
  wn::|trinketry%1:14:00::|
  wn::|population%1:14:01::|
 </relation>
 </concept>
 <concept name="ont::any-sem">
 <relation label="inherit">
  ont::root
 </relation>
 </concept>
 <sem-feats>
 <or>
  <concept name="phys-obj" />
  <concept name="abstr-obj" />
  <concept name="situation" />
 </or>
 <feat name="type">ont::referential-sem</feat>
 </sem-feats>
 <concept name="phys-obj" />
 <sense>
 <morph>
  <pos pos="n" />
  <word first-word="configuration" />
 </morph>
 <example text="A configuration of stones">
  <provenance name="TRIPS"/>
 </example>
 <relation label="inherit">
  ont::arrangement-configuration
 </relation>
 <syntax>
  <template-call template="ont::pred-subcat-contents-templ" />
  <syn-sem>
   <syn-sem-map syn-arg="subcat" syn-cat="deepsemlex::pp" head-word="w::of" sem-role="ont::contents"/>
  </syn-sem>
  <syn-feats>
   <feat name="mass">count</feat>
   <feat name="case">
   <or>
    sub
    obj
   </or>
   </feat>
   <feat name="agr">
   <or>
    |3s|
    |3p|
   </or>
   </feat>
   <feat name="sort">pred</feat>
  </syn-feats>
 </syntax>
 </sense>
</dsl>
